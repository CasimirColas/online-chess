import Head from "next/head";
import styles from "@/styles/Home.module.css";
import ChessBoard from "@/components/chess/Board";
import { useState, useEffect } from "react";
import {
  createCustomBoard,
  defaultSpecial,
  initialBoard,
  playerInfo,
  makeAmove,
  gameInfo,
} from "@/components/chess/functions";

export default function Home() {
  function playAudio() {
    const moveSound = new Audio("chess/sounds/move.mp3");
    moveSound.play();
  }
  const [game, setGame] = useState<gameInfo>(
    playerInfo(
      true,
      createCustomBoard([
        { p: "king_white", pos: 60 },
        { p: "king_black", pos: 12 },
        { p: "rook_white", pos: 56 },
        { p: "rook_white", pos: 63 },
        { p: "rook_black", pos: 44 },
        { p: "rook_white", pos: 7 },
      ]),
      defaultSpecial
    )
    // createCustomBoard([
    //   { p: "king_white", pos: 60 },
    //   { p: "king_black", pos: 42 },
    //   { p: "rook_black", pos: 48 },
    //   { p: "rook_black", pos: 47 },
    // ])
  );
  const [wishedPiece, setwishedPiece] = useState("rook");
  const [turnCounter, setTurnCounter] = useState(0);

  function movePice(pos1: number, pos2: number) {
    setGame(makeAmove(pos1, pos2, game, wishedPiece));
    playAudio();
  }

  function finalMessage() {
    if (!game.canPlay && game?.check) {
      return `Checkmate ${game.playerIsWhite ? "Black won" : "White won"}`;
    }
    if (!game.canPlay) {
      return "Draw";
    }
    if (game.check) {
      return "Check";
    }
    return "You can play";
  }
  useEffect(() => {
    console.log(game);

    setTurnCounter(turnCounter + 1);
  }, [game]);
  return (
    <>
      <Head>
        <title>Multiplayer Chess</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>
          It's {game.playerIsWhite ? "white's" : "black's"} turn to make a move
        </h1>
        <h2>Turn number: {turnCounter}</h2>
        <ChessBoard
          board={game.board}
          makeAmove={movePice}
          pieceMoves={game.pieceMoves}
          ennemyPos={game.ennemyPos}
        />
        <h1>{finalMessage()}</h1>
        {!game.canPlay ? (
          <button
            onClick={() => {
              setGame(playerInfo(true, initialBoard, defaultSpecial));
              setTurnCounter(0);
            }}
          >
            Restart
          </button>
        ) : null}
      </main>
    </>
  );
}
